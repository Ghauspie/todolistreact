{"ast":null,"code":"import _classCallCheck from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Totolistjs\\\\src\\\\components\\\\ToDoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ToDo, { tasks } from './ToDo';\nimport today from './DateDay';\n/* var date = {currentTime: (new Date()).toLocaleString()}; */\n\nvar ToDoList = /*#__PURE__*/function (_Component) {\n  _inherits(ToDoList, _Component);\n\n  function ToDoList(props) {\n    var _this;\n\n    _classCallCheck(this, ToDoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoList).call(this, props));\n\n    _this.DeleteClick = function (e) {\n      /*  e.handleChange() */\n      //on vérifie qu'on recupere bien l'id de la task\n      console.log('e vaut: ' + e);\n      var taskid = e;\n      console.log(taskid);\n      var test = _this.props.tasks;\n      console.log(test); //Pour récuperer le bon object de notre collection on vas compte combien de fois on fait une recherche dans celui-ci\n      // s'initialise mon Itask a @\n\n      var itask = ''; // dans cette boucle je rajoute 1 a ma variable itask\n\n      do {\n        itask += 1;\n      } //tant que je n'ai pas l'id de la task qui correspond a taskid\n      while (test.id === taskid); // Puis je rajoute 1 pour avoir la bonne valeur a supprimer \n\n\n      console.log(itask); //on recupere les données préalable\n\n      var tasks = _this.props.tasks.slice();\n\n      console.log(tasks); // on supprime la task souhaité\n\n      tasks.splice(itask, 1);\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      console.log(tasks); //on save les modifications\n\n      _this.props.history.push('/');\n    };\n\n    _this.handleChange = _this.DeleteClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      tasks: _this.props.tasks\n    };\n    return _this;\n  }\n  /*     onDeleteClick(event)\n          event.preventDefault();\n          const array= this.state.items;\n          const index= array.indexOf(event.target.value);\n          array.splice(index, 1);\n          this.setState({\n              items:array\n          });\n      } */\n\n\n  _createClass(ToDoList, [{\n    key: \"renderTodos\",\n    value: function renderTodos() {\n      var _this2 = this;\n\n      return this.state.tasks.map(function (task) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: task.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ToDo, {\n          className: \"w-75\",\n          task: task,\n          key: task.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 20\n          }\n        }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-outline-dark bg-light\",\n          onClick: _this2.DeleteClick.bind(_this2, task.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 72\n          }\n        }, \"Delete\"));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"m-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, \"Liste de t\\xE2ches de la journ\\xE9e du \", today.getDate(), \"/\", today.getMonth() + 1, \"/\", today.getFullYear(), \" \"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-group m-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, this.renderTodos())));\n    }\n  }]);\n\n  return ToDoList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps)(ToDoList);","map":{"version":3,"sources":["D:/Totolistjs/src/components/ToDoList.js"],"names":["React","Component","connect","ToDo","tasks","today","ToDoList","props","DeleteClick","e","console","log","taskid","test","itask","id","slice","splice","setState","history","push","handleChange","bind","state","map","task","getDate","getMonth","getFullYear","renderTodos","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport { connect } from 'react-redux';\nimport ToDo, {tasks} from './ToDo';\nimport today from './DateDay';\n\n/* var date = {currentTime: (new Date()).toLocaleString()}; */\n\nclass ToDoList extends Component {\n  constructor(props){\n    super(props);\n    this.handleChange=this.DeleteClick.bind(this);\n    this.state={tasks: this.props.tasks}\n  }\n\n/*     onDeleteClick(event)\n        event.preventDefault();\n        const array= this.state.items;\n        const index= array.indexOf(event.target.value);\n        array.splice(index, 1);\n        this.setState({\n            items:array\n        });\n    } */\n    DeleteClick= (e) =>{\n       /*  e.handleChange() */\n        //on vérifie qu'on recupere bien l'id de la task\n        console.log('e vaut: '+e)\n        var taskid=e\n        console.log(taskid)\n        var test = this.props.tasks\n        console.log(test)\n        //Pour récuperer le bon object de notre collection on vas compte combien de fois on fait une recherche dans celui-ci\n        // s'initialise mon Itask a @\n        var itask='';\n        // dans cette boucle je rajoute 1 a ma variable itask\n        do{ \n            itask +=1;\n            }\n        //tant que je n'ai pas l'id de la task qui correspond a taskid\n        while(test.id === taskid);\n        // Puis je rajoute 1 pour avoir la bonne valeur a supprimer \n        \n        console.log(itask);\n          //on recupere les données préalable\n        var tasks=this.props.tasks.slice()\n        console.log(tasks)\n\n        // on supprime la task souhaité\n        tasks.splice(itask,1 )\n\n         this.setState({tasks}) ; \n        console.log(tasks)\n        //on save les modifications\n        this.props.history.push('/');  \n        \n      } \n\n    renderTodos(){\n        return this.state.tasks.map((task)=> {\n            return (\n                <div key={task.id}>\n                   <ToDo className=\"w-75\" task={task} key={task.id} /> <button className=\"btn btn-outline-dark bg-light\" onClick={this.DeleteClick.bind(this, task.id)}>Delete</button>\n                </div>\n            );\n        });\n    }\n      \n    render() {\n       \n        return (\n            <>\n                <h1 className=\"m-3\">Liste de tâches de la journée du {today.getDate()}/{today.getMonth()+1}/{today.getFullYear()} </h1>\n                <ul className=\"list-group m-3\">\n                    <div>\n                {this.renderTodos()}\n                    </div>\n                   \n                     \n                </ul>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.tasks\n    }\n}\n\nexport default connect(mapStateToProps)(ToDoList);\n"]},"metadata":{},"sourceType":"module"}