{"ast":null,"code":"import _classCallCheck from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Totolistjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Totolistjs\\\\src\\\\components\\\\ToDo.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CompletedTask from './CompletedTask';\n\nvar ToDo = /*#__PURE__*/function (_Component) {\n  _inherits(ToDo, _Component);\n\n  function ToDo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToDo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToDo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      completed: _this.props.task.completed\n    };\n    _this.taskId = {\n      id: _this.props.task.id\n    };\n\n    _this.toggleCompleted = function () {\n      var _this$props = _this.props,\n          onToggleCompleted = _this$props.onToggleCompleted,\n          task = _this$props.task;\n\n      _this.setState(function (prevState) {\n        return {\n          completed: !prevState.completed\n        };\n      });\n\n      onToggleCompleted(task.id);\n    };\n\n    _this.DeleteClick = function (e) {\n      //on vérifie qu'on recupere bien l'id de la task\n      console.log(e);\n      var test = _this.props.tasks;\n      console.log(test); //on recupere les données préalable\n\n      var tasks = _this.props.tasks.slice(); // on supprime la task souhaité\n\n\n      tasks.splice(e, 1); //\n\n      /*  this.setState({tasks}) */\n\n      console.log(tasks); //on save les modifications\n\n      _this.props.history.push('/');\n    };\n\n    return _this;\n  }\n\n  _createClass(ToDo, [{\n    key: \"render\",\n    value: function render() {\n      var task = this.props.task;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: 'list-group-item d-flex align-items-center w-75' + (this.state.completed ? 'bg-success' : 'coucou'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, task.name, /*#__PURE__*/React.createElement(\"button\", {\n        className: 'btn btn-sm ml-auto ' + (this.state.completed ? 'btn-success' : 'btn-outline-success'),\n        onClick: CompletedTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, \"\\u2713\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-dark bg-light\",\n        onClick: this.DeleteClick.bind(this, task.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, \"Delete\")); //end return in render()\n    } //end render();\n\n  }]);\n\n  return ToDo;\n}(Component); //end ToDoClass\n\n\nexport default ToDo;","map":{"version":3,"sources":["D:/Totolistjs/src/components/ToDo.js"],"names":["React","Component","connect","CompletedTask","ToDo","state","completed","props","task","taskId","id","toggleCompleted","onToggleCompleted","setState","prevState","DeleteClick","e","console","log","test","tasks","slice","splice","history","push","name","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;IAGMC,I;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBF;AADxB,K;UAIRG,M,GAAO;AACHC,MAAAA,EAAE,EAAE,MAAKH,KAAL,CAAWC,IAAX,CAAgBE;AADjB,K;;UAGPC,e,GAAkB,YAAM;AAAA,wBACa,MAAKJ,KADlB;AAAA,UACdK,iBADc,eACdA,iBADc;AAAA,UACKJ,IADL,eACKA,IADL;;AAEpB,YAAKK,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AACxBR,UAAAA,SAAS,EAAE,CAACQ,SAAS,CAACR;AADE,SAAL;AAAA,OAAvB;;AAGAM,MAAAA,iBAAiB,CAACJ,IAAI,CAACE,EAAN,CAAjB;AACH,K;;UAEDK,W,GAAa,UAACC,CAAD,EAAM;AACf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMG,IAAI,GAAG,MAAKZ,KAAL,CAAWa,KAAxB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAJe,CAKf;;AACA,UAAIC,KAAK,GAAC,MAAKb,KAAL,CAAWa,KAAX,CAAiBC,KAAjB,EAAV,CANe,CAOf;;;AACAD,MAAAA,KAAK,CAACE,MAAN,CAAaN,CAAb,EAAe,CAAf,EARe,CASf;;AACD;;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAXe,CAYf;;AACA,YAAKb,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AAED,K;;;;;;;6BAGK;AAAA,UACChB,IADD,GACS,KAAKD,KADd,CACCC,IADD;AAGJ,0BACI;AAAI,QAAA,SAAS,EAAE,oDAAmD,KAAKH,KAAL,CAAWC,SAAX,GAAuB,YAAvB,GAAsC,QAAzF,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,IAAI,CAACiB,IADV,eAEI;AAAQ,QAAA,SAAS,EAAE,yBAAuB,KAAKpB,KAAL,CAAWC,SAAX,GAAuB,aAAvB,GAAuC,qBAA9D,CAAnB;AAAyG,QAAA,OAAO,EAAEH,aAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,+BAAlB;AAAkD,QAAA,OAAO,EAAE,KAAKY,WAAL,CAAiBW,IAAjB,CAAsB,IAAtB,EAA4BlB,IAAI,CAACE,EAAjC,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ,CAHI,CASH;AACJ,K,CAAA;;;;;EA7CeT,S,GA+CnB;;;AACD,eAAeG,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport CompletedTask from './CompletedTask';\n\n\nclass ToDo  extends Component {\n\n    state = {\n        completed : this.props.task.completed\n    }\n\n    taskId={\n        id: this.props.task.id\n    }\n    toggleCompleted = () => {\n        let { onToggleCompleted, task} = this.props\n        this.setState(prevState => ({\n            completed: !prevState.completed\n        }))\n        onToggleCompleted(task.id)\n    }\n\n    DeleteClick= (e) =>{\n        //on vérifie qu'on recupere bien l'id de la task\n        console.log(e)\n        const test = this.props.tasks\n        console.log(test)\n        //on recupere les données préalable\n        var tasks=this.props.tasks.slice();\n        // on supprime la task souhaité\n        tasks.splice(e,1)\n        //\n       /*  this.setState({tasks}) */\n        console.log(tasks)\n        //on save les modifications\n        this.props.history.push('/') \n  \n      } \n\n\n    render(){   \n        let {task} = this.props;\n        \n        return (\n            <li className={'list-group-item d-flex align-items-center w-75'+ (this.state.completed ? 'bg-success' : 'coucou')}>\n                {task.name} \n                <button className={'btn btn-sm ml-auto '+(this.state.completed ? 'btn-success' : 'btn-outline-success')} onClick={CompletedTask}>&#x2713;</button>\n                <button className=\"btn btn-outline-dark bg-light\" onClick={this.DeleteClick.bind(this, task.id)}>Delete</button>\n            </li>\n        )//end return in render()\n    }//end render();\n\n}//end ToDoClass\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}